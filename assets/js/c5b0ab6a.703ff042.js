"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[9396],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(v,l(l({ref:t},u),{},{components:n})):a.createElement(v,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),o=n(6010),l=n(2389),i=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t;const{lazy:n,block:l,defaultValue:p,values:m,groupId:v,className:b}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===p?p:p??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:O}=(0,s.U)(),[w,x]=(0,r.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=v){const e=k[v];null!=e&&e!==w&&h.some((t=>t.value===e))&&x(e)}const Z=e=>{const t=e.currentTarget,n=T.indexOf(t),a=h[n].value;a!==w&&(N(t),x(a),null!=v&&O(v,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"Enter":Z(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},b)},h.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:E,onClick:Z},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},2428:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),o=n(5488),l=n(5162);const i={sidebar_label:"iOS"},s="Zealot iOS SDK",c={unversionedId:"developer-guide/sdk/ios",id:"developer-guide/sdk/ios",title:"Zealot iOS SDK",description:"The iOS component provides a service to check for new versions and installations for Zealot,",source:"@site/docs/developer-guide/sdk/ios.md",sourceDirName:"developer-guide/sdk",slug:"/developer-guide/sdk/ios",permalink:"/docs/developer-guide/sdk/ios",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/docs/developer-guide/sdk/ios.md",tags:[],version:"current",frontMatter:{sidebar_label:"iOS"},sidebar:"developerGuide",previous:{title:"SDKs",permalink:"/docs/category/sdks"},next:{title:"Android",permalink:"/docs/developer-guide/sdk/android"}},u={},d=[{value:"Install",id:"install",level:2},{value:"Cocoapods",id:"cocoapods",level:3},{value:"Usages",id:"usages",level:2},{value:"Import header",id:"import-header",level:3},{value:"Configure",id:"configure",level:3}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"zealot-ios-sdk"},"Zealot iOS SDK"),(0,r.kt)("p",null,"The iOS component provides a service to check for new versions and installations for Zealot,\nsupporting Swift and Objective-C."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("h3",{id:"cocoapods"},"Cocoapods"),(0,r.kt)("p",null,"Adding below code into ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'Zealot', :git => 'https://github.com/tryzealot/zealot-ios.git', :branch => 'master'\n")),(0,r.kt)("p",null,"Install it\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pod install\n")),(0,r.kt)("h2",{id:"usages"},"Usages"),(0,r.kt)("h3",{id:"import-header"},"Import header"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the code in your ",(0,r.kt)("inlineCode",{parentName:"li"},"AppDelegate"),"\uff1a")),(0,r.kt)(o.Z,{groupId:"ios-zealot-sdk",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Swift",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"import Zealot\n"))),(0,r.kt)(l.Z,{value:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Objective-C\n#import <Zealot/Zealot-Swift.h>\n")))),(0,r.kt)("h3",{id:"configure"},"Configure"),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Add the following code in  ",(0,r.kt)("inlineCode",{parentName:"li"},"application:didFinishLaunchingWithOptions:")," method block\uff1a")),(0,r.kt)(o.Z,{groupId:"ios-zealot-sdk",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"Swift",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// Single channel\nlet zealot = Zealot(endpoint: "http://zealot.com", channelKey: "...")\nzealot.checkVersion()\n\n// Multi-channel, such as beta, adhoc versions\nlet zealot = Zealot(endpoint: "http://zealot.com",\n                 channelKeys: [\n                   "beta": "xxxxxxx",\n                   "test": "yyyyyyy"],\n          default_enviroment: "beta")\n\n// Active it\nzealot.checkVersion()\n'))),(0,r.kt)(l.Z,{value:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'// Single channel\nZealot *zealot = [[Zealot alloc] initWithEndpoint:@"http://zealot.com"\n                                       channelKey:@"..."];\n\n// Multi-channel, such as beta, adhoc versions\nZealot *zealot = [[Zealot alloc] initWithEndpoint:@"http://zealot.com"\n                                      channelKeys:@{\n                                              @"beta": @"xxxxxxx",\n                                              @"gray": @"yyyyyyy"\n                                          }\n                               default_enviroment:@"beta"];\n\n// Active it\n[zealot checkVersion];\n')))))}m.isMDXComponent=!0}}]);