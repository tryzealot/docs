"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[8763],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,g=d["".concat(i,".").concat(f)]||d[f]||p[f]||n;return r?a.createElement(g,s(s({ref:t},u),{},{components:r})):a.createElement(g,s({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,s=new Array(n);s[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:o,s[1]=l;for(var c=2;c<n;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4809:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var a=r(7462),o=(r(7294),r(3905));const n={},s="Data storages",l={unversionedId:"self-hosted/storage",id:"self-hosted/storage",title:"Data storages",description:"Here is a list of all the data storages required by the Zealot service,",source:"@site/docs/self-hosted/storage.md",sourceDirName:"self-hosted",slug:"/self-hosted/storage",permalink:"/docs/next/self-hosted/storage",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/docs/self-hosted/storage.md",tags:[],version:"current",frontMatter:{},sidebar:"selfHosted",previous:{title:"Schedule Jobs",permalink:"/docs/next/self-hosted/configuration/schedule-jobs"}},i={},c=[{value:"Postgres",id:"postgres",level:2},{value:"Redis",id:"redis",level:2},{value:"File storage",id:"file-storage",level:2},{value:"Backup storage",id:"backup-storage",level:2}],u={toc:c},d="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-storages"},"Data storages"),(0,o.kt)("p",null,"Here is a list of all the data storages required by the Zealot service,\nfor those who are able to manually backup and restore data before better backup management tools are available."),(0,o.kt)("h2",{id:"postgres"},"Postgres"),(0,o.kt)("p",null,"This is used to store and manage all data related to Zealot, so it goes without saying."),(0,o.kt)("h2",{id:"redis"},"Redis"),(0,o.kt)("p",null,"Currently only the sidekiq asynchronous task service is using it to store some task status and statistics."),(0,o.kt)("h2",{id:"file-storage"},"File storage"),(0,o.kt)("p",null,"The Zealot service relies on postgresql, redis and some other disk storage for uploaded application and debug files.\nIt is currently stored in the filesystem in the ",(0,o.kt)("inlineCode",{parentName:"p"},"public/uploads")," directory."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"apps The directory for uploading applications"),(0,o.kt)("li",{parentName:"ul"},"debugs_files directory for uploading debug files")),(0,o.kt)("h2",{id:"backup-storage"},"Backup storage"),(0,o.kt)("p",null,"The Zealot service currently supports command-generated backup data, which will contain\nthe database and binary packages of the uploaded apps and debug files."),(0,o.kt)("p",null,"The backup data is currently stored in the file system in the ",(0,o.kt)("inlineCode",{parentName:"p"},"public/backup")," directory."))}p.isMDXComponent=!0}}]);