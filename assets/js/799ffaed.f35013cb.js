"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[8493],{6487:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var t=a(5893),l=a(1151);const s={sidebar_label:"Kubernetes"},o="Deploy Zealot with Kubernetes guide",i={id:"self-hosted/deployment/kubernetes",title:"Deploy Zealot with Kubernetes guide",description:"Zealot support deployments using Kubernetes, but only .yaml config files are available currently.",source:"@site/versioned_docs/version-4.x/self-hosted/deployment/kubernetes.md",sourceDirName:"self-hosted/deployment",slug:"/self-hosted/deployment/kubernetes",permalink:"/docs/4.x/self-hosted/deployment/kubernetes",draft:!1,unlisted:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/versioned_docs/version-4.x/self-hosted/deployment/kubernetes.md",tags:[],version:"4.x",frontMatter:{sidebar_label:"Kubernetes"},sidebar:"selfHosted",previous:{title:"Step by step",permalink:"/docs/4.x/self-hosted/deployment/docker/step-by-step"},next:{title:"Nomad",permalink:"/docs/4.x/self-hosted/deployment/nomad"}},r={},c=[{value:"Check list",id:"check-list",level:2},{value:"Steps",id:"steps",level:2},{value:"10-zealot-namespace.yml",id:"10-zealot-namespaceyml",level:3},{value:"20-zealot-secrets.yml",id:"20-zealot-secretsyml",level:3},{value:"21-zealot-configmap.yml",id:"21-zealot-configmapyml",level:3},{value:"30-zealot-storage.yml",id:"30-zealot-storageyml",level:3},{value:"40-zealot-deployment.yml",id:"40-zealot-deploymentyml",level:3},{value:"50-zealot-service.yml",id:"50-zealot-serviceyml",level:3},{value:"60-zealot-ingress.yml",id:"60-zealot-ingressyml",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"deploy-zealot-with-kubernetes-guide",children:"Deploy Zealot with Kubernetes guide"}),"\n",(0,t.jsxs)(n.p,{children:["Zealot support deployments using Kubernetes, but only ",(0,t.jsx)(n.code,{children:".yaml"})," config files are available currently."]}),"\n",(0,t.jsx)(n.h2,{id:"check-list",children:"Check list"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ConfigMap"})," and ",(0,t.jsx)(n.code,{children:"Secret"})," to configure enviroment variables."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PersistentVolumeClaim"})," to configure ",(0,t.jsx)(n.code,{children:"public/uploads"}),", ",(0,t.jsx)(n.code,{children:"public/bakcup"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Deployment"})," to control ",(0,t.jsx)(n.code,{children:"zealot"})," pod."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,t.jsx)(n.h3,{id:"10-zealot-namespaceyml",children:"10-zealot-namespace.yml"}),"\n",(0,t.jsx)(n.p,{children:"Zealot namespace."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="10-zealot-namespace.yml"',children:"api Version: v1\nkind: Namespace\nmetadata:\nname: zealot\n"})}),"\n",(0,t.jsx)(n.h3,{id:"20-zealot-secretsyml",children:"20-zealot-secrets.yml"}),"\n",(0,t.jsxs)(n.p,{children:["Zealot enviroments secrets. This is loaded all secrets ",(0,t.jsx)(n.a,{href:"/docs/self-hosted/configuration/environment-variables",children:"enviroments"}),", ",(0,t.jsx)(n.strong,{children:"all values need encryt by base64"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="20-zealot-secrets.yml"',children:"apiVersion: v1\nkind: Secret\nmetadata:\n  namespace: zealot\n  name: zealot-secrets\ndata:\n  ZEALOT_ADMIN_EMAIL: V1ZkU2RHRlhOVUZsYlZab1lrYzVNRXh0VG5aaVVUMDk=\n  ZEALOT_ADMIN_PASSWORD: emVAbDB0\n  ZEALOT_POSTGRES_HOST: cG9zdGdyZXM=\n  ZEALOT_POSTGRES_PORT: NTQzMg==\n  ZEALOT_POSTGRES_USERNAME: emVhbG90\n  ZEALOT_POSTGRES_PASSWORD: emVAbDB0\n  ZEALOT_POSTGRES_DB_NAME: emVhbG90\n  REDIS_URL: cmVkaXM6Ly9yZWRpczo2Mzc5LzE=\n\n  # echo -n 'secret-key' | sha256sum | awk '{ printf $1 }' | base64\n  SECRET_TOKEN: ODVkYmUxNWQ3NWVmOTMwOGM3YWUwZjMzYzdhMzI0Y2M2ZjRiZjUxOWEyZWQyZjMwMjdiZDMzYzE0MGE0ZjlhYQ==\n"})}),"\n",(0,t.jsx)(n.h3,{id:"21-zealot-configmapyml",children:"21-zealot-configmap.yml"}),"\n",(0,t.jsxs)(n.p,{children:["Zealot enviroments config map. This is loaded safe ",(0,t.jsx)(n.a,{href:"/docs/self-hosted/configuration/environment-variables",children:"enviroments"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="21-zealot-configmap.yml"',children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: zealot\n  name: zealot-config\ndata:\n  ZEALOT_DOMAIN: zealot.icyleaf.dev\n  DEFAULT_LOCALE: en\n  ZEALOT_REGISTER_ENABLED: "true"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"30-zealot-storageyml",children:"30-zealot-storage.yml"}),"\n",(0,t.jsx)(n.p,{children:"The creation of the persistent volume claims for uploaded files (apps/debug files) and backup files. May you want to increase the size. This expects to have a storage class installed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="30-zealot-storage.yml"',children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zealot-uploads\n  namespace: zealot\n  labels:\n    app: zealot\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: zealot-backup\n  namespace: zealot\n  labels:\n    app: zealot\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n"})}),"\n",(0,t.jsx)(n.h3,{id:"40-zealot-deploymentyml",children:"40-zealot-deployment.yml"}),"\n",(0,t.jsxs)(n.p,{children:["Create zealot deployment, edit ",(0,t.jsx)(n.code,{children:"replicas"})," and ",(0,t.jsx)(n.code,{children:"image"})," tag."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="40-zealot-deployment.yml"',children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: zealot\n  namespace: zealot\nspec:\n  restartPolicy: Always\n  replicas: 1\n  selector:\n    matchLabels:\n      app: zealot\n  template:\n    metadata:\n      labels:\n        app: zealot\n    spec:\n      containers:\n        - name: zealot\n          image: ghcr.io/tryzealot/zealot:nightly\n          # imagePullPolicy: Always\n          ports:\n            - containerPort: 80\n              protocol: TCP\n              name: http\n          envFrom:\n            - configMapRef:\n              name: zealot-env\n            - secretRef:\n              name: zealot-secrets\n          volumeMounts:\n            - mountPath: /app/public/uploads\n              name: uploads\n            - mountPath: /app/public/backup\n              name: backup\n      volumes:\n        - name: uploads\n          persistentVolumeClaim:\n            claimName: zealot-uploads\n        - name: backup\n          persistentVolumeClaim:\n            claimName: zealot-backup\n"})}),"\n",(0,t.jsx)(n.h3,{id:"50-zealot-serviceyml",children:"50-zealot-service.yml"}),"\n",(0,t.jsx)(n.p,{children:"Creating zealot service."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="50-zealot-service.yml"',children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: zealot\n  namespace: zealot\n  labels:\n    app: zealot\nspec:\n  selector:\n    app: zealot\n  ports:\n  - port: 80\n    targetPort: http\n    name: http\n    protocol: TCP\n"})}),"\n",(0,t.jsx)(n.h3,{id:"60-zealot-ingressyml",children:"60-zealot-ingress.yml"}),"\n",(0,t.jsx)(n.p,{children:"Setting up the ingress for the zealot service."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="50-zealot-ingress.yml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: zealot\n  namespace: zealot\n  annotations:\n    #cert-manager.io/cluster-issuer: letsencrypt-prod\n    #kubernetes.io/ingress.class: nginx\nspec:\n  rules:\n  - host: zealot.icyleaf.dev\n    http:\n      paths:\n      - web:\n          service:\n            name: zealot\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n"})})]})}function m(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>i,a:()=>o});var t=a(7294);const l={},s=t.createContext(l);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);