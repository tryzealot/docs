"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[957],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,y=u["".concat(p,".").concat(f)]||u[f]||d[f]||l;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8738:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const l={sidebar_label:"Fly"},a="Deploy Zealot to Fly guide",i={unversionedId:"self-hosted/deployment/fly",id:"version-4.x/self-hosted/deployment/fly",title:"Deploy Zealot to Fly guide",description:"Zealot support use App Configuration (fly.toml) to deploy on fly.io.",source:"@site/versioned_docs/version-4.x/self-hosted/deployment/fly.md",sourceDirName:"self-hosted/deployment",slug:"/self-hosted/deployment/fly",permalink:"/docs/self-hosted/deployment/fly",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/versioned_docs/version-4.x/self-hosted/deployment/fly.md",tags:[],version:"4.x",frontMatter:{sidebar_label:"Fly"},sidebar:"selfHosted",previous:{title:"Cloud Provider Guides",permalink:"/docs/category/cloud-provider-guides"},next:{title:"Railway",permalink:"/docs/self-hosted/deployment/railway"}},p={},s=[{value:"Deploying on Fly",id:"deploying-on-fly",level:2},{value:"App Configuration",id:"app-configuration",level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-zealot-to-fly-guide"},"Deploy Zealot to Fly guide"),(0,o.kt)("p",null,"Zealot support use App Configuration (fly.toml) to deploy on ",(0,o.kt)("a",{parentName:"p",href:"https://fly.io"},"fly.io"),"."),(0,o.kt)("h2",{id:"deploying-on-fly"},"Deploying on Fly"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Install ",(0,o.kt)("a",{parentName:"li",href:"https://fly.io/docs/flyctl/"},"flyctl"),"."),(0,o.kt)("li",{parentName:"ul"},"Copy full content of ",(0,o.kt)("a",{parentName:"li",href:"#app-configuration"},"app configuration")," save to ",(0,o.kt)("inlineCode",{parentName:"li"},"fly.toml")," then change the ",(0,o.kt)("inlineCode",{parentName:"li"},"app")," value ."),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"flyctl deploy"),"."),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"fly scale vm shared-cpu-1x --memory 512"),".")),(0,o.kt)("h3",{id:"app-configuration"},"App Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'app = "[app-name:changeme]"\nkill_signal = "SIGINT"\nkill_timeout = 120\nprocesses = []\n\n[build]\n  image = "ghcr.io/tryzealot/zealot:nightly"\n\n[experimental]\n  allowed_public_ports = []\n  auto_rollback = true\n\n[[services]]\n  http_checks = []\n  internal_port = 80\n  processes = ["app"]\n  protocol = "tcp"\n  script_checks = []\n  [services.concurrency]\n    hard_limit = 25\n    soft_limit = 20\n    type = "connections"\n\n  [[services.ports]]\n    force_https = true\n    handlers = ["http"]\n    port = 80\n\n  [[services.ports]]\n    handlers = ["tls", "http"]\n    port = 443\n\n  [[services.tcp_checks]]\n    grace_period = "1s"\n    interval = "15s"\n    restart_limit = 0\n    timeout = "2s"\n\n[[statics]]\n  guest_path = "/app/public"\n  url_prefix = "/"\n')))}d.isMDXComponent=!0}}]);