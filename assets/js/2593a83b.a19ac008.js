"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[4643],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(p,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5009:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},l="Third-party Authentication",i={unversionedId:"self-hosted/configuration/third-party-authentication",id:"version-5.0.0/self-hosted/configuration/third-party-authentication",title:"Third-party Authentication",description:"Zealot supports authorized logins using supported third-party services, which can be currently configured via the following environment variables or in the settings page of the admin panel.",source:"@site/versioned_docs/version-5.0.0/self-hosted/configuration/third-party-authentication.md",sourceDirName:"self-hosted/configuration",slug:"/self-hosted/configuration/third-party-authentication",permalink:"/docs/self-hosted/configuration/third-party-authentication",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/versioned_docs/version-5.0.0/self-hosted/configuration/third-party-authentication.md",tags:[],version:"5.0.0",frontMatter:{},sidebar:"selfHosted",previous:{title:"Environment Variables",permalink:"/docs/self-hosted/configuration/environment-variables"},next:{title:"Schedule Jobs",permalink:"/docs/self-hosted/configuration/schedule-jobs"}},p={},c=[{value:"Gitlab",id:"gitlab",level:2},{value:"Google",id:"google",level:2},{value:"Feishu (Lark)",id:"feishu-lark",level:2},{value:"LDAP",id:"ldap",level:2},{value:"OpenID Connect",id:"openid-connect",level:2},{value:"Auto-discovery",id:"auto-discovery",level:3},{value:"Manual",id:"manual",level:3}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"third-party-authentication"},"Third-party Authentication"),(0,r.kt)("p",null,"Zealot supports authorized logins using supported third-party services, which can be currently configured via the following environment variables or in the settings page of the admin panel."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Service"),(0,r.kt)("th",{parentName:"tr",align:null},"provider"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Feishu"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"feishu"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Gitlab"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"gitlab"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Google"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"google_oauth2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LDAP"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ldap"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OpenID Connect"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"openid_connect"))))),(0,r.kt)("p",null,"If the above services need to set the callback address please set it uniformly as follows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http://zealot.com/users/auth/:provider/callback\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},":provider")," is the identifier of the above supported third-party service, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# if Google is enabled, then replace `:provider` with `google_oauth2`.\nhttp://zealot.com/users/auth/google_oauth2/callback\n")),(0,r.kt)("h2",{id:"gitlab"},"Gitlab"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Register a Gitlab ",(0,r.kt)("a",{parentName:"li",href:"http://gitlab.com"},"On line")," account or use self-host service"),(0,r.kt)("li",{parentName:"ol"},"Create an application in Preferences -> Applications page."),(0,r.kt)("li",{parentName:"ol"},"Configure ",(0,r.kt)("inlineCode",{parentName:"li"},"Redirect URI")," such like ",(0,r.kt)("inlineCode",{parentName:"li"},"http://zealot.com/users/auth/gitlab/callback")," (replace the domain in your case)"),(0,r.kt)("li",{parentName:"ol"},"Check scope: ",(0,r.kt)("inlineCode",{parentName:"li"},"read_user"),"\uff0cBy default zealot only uses this license, if your enable scope is ",(0,r.kt)("inlineCode",{parentName:"li"},"api")," that's fine too")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"GITLAB_ENABLED=true\nGITLAB_SITE=https://gitlab.com/api/v4\nGITLAB_SCOPE=read_user\nGITLAB_APP_ID=\nGITLAB_SECRET=\n")),(0,r.kt)("h2",{id:"google"},"Google"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Register a Google account"),(0,r.kt)("li",{parentName:"ol"},"Enable ",(0,r.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/apis/dashboard"},"Google Cloud Platform")," service"),(0,r.kt)("li",{parentName:"ol"},"Choose or create a Project then go to Credentials page"),(0,r.kt)("li",{parentName:"ol"},"Create OAuth Client ID with Web Application, and configure Authorized redirect URI such like ",(0,r.kt)("inlineCode",{parentName:"li"},"http://zealot.com/users/auth/google_oauth2/callback")," (replace the domain in your case)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"GOOGLE_OAUTH_ENABLED=true\nGOOGLE_CLIENT_ID=\nGOOGLE_SECRET=\n")),(0,r.kt)("h2",{id:"feishu-lark"},"Feishu (Lark)"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Register a feishu (lark) account and download the Phone app."),(0,r.kt)("li",{parentName:"ol"},"Enable ",(0,r.kt)("a",{parentName:"li",href:"https://open.feishu.cn/app/"},"Open platform")," and create application to get app_id, app_secret"),(0,r.kt)("li",{parentName:"ol"},"Configure callback url such like ",(0,r.kt)("inlineCode",{parentName:"li"},"http://zealot.com/users/auth/feishu/callback")," (replace the domain in your case)"),(0,r.kt)("li",{parentName:"ol"},"Check user filed information scope: ",(0,r.kt)("inlineCode",{parentName:"li"},"email address")," (Optional)"),(0,r.kt)("li",{parentName:"ol"},"Create a version and publish")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"FEISHU_ENABLED=true\nFEISHU_APP_ID=\nFEISHU_APP_SECRET=\n")),(0,r.kt)("h2",{id:"ldap"},"LDAP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'LDAP_ENABLED=true\nLDAP_HOST=10.0.0.1\nLDAP_PORT=389\nLDAP_METHOD=plain\nLDAP_BIND_DN="cn=Manager,dc=example,dc=com"\nLDAP_PASSWORD=password\nLDAP_BASE="ou=People,dc=example,dc=com"\nLDAP_UID=uid\n')),(0,r.kt)("h2",{id:"openid-connect"},"OpenID Connect"),(0,r.kt)("p",null,"Supports both auto-discovery mode and manual settings."),(0,r.kt)("h3",{id:"auto-discovery"},"Auto-discovery"),(0,r.kt)("p",null,"Turning on auto-discovery mode will automatically fetch the ",(0,r.kt)("inlineCode",{parentName:"p"},"[OIDC_ISSUER_URL]/.well-known/openid-configuration")," configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"OIDC_ENABLED=true\nOIDC_CLIENT_ID=\nOIDC_CLIENT_SECRET=\nOIDC_ISSUER_URL=https://oidc.example.com\nOIDC_DISCOVERY=true\n")),(0,r.kt)("h3",{id:"manual"},"Manual"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"OIDC_ENABLED=true\nOIDC_CLIENT_ID=\nOIDC_CLIENT_SECRET=\nOIDC_ISSUER_URL=https://oidc.example.com\nOIDC_AUTH_URI=/authorize\nOIDC_TOKEN_URI=/token\nOIDC_USERINFO_URI=/userinfo\n")),(0,r.kt)("p",null,"Above ",(0,r.kt)("inlineCode",{parentName:"p"},"OIDC_AUTH_URI"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"OIDC_TOKEN_URI"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"OIDC_USERINFO_URI")," will use the default path as above if not set."))}d.isMDXComponent=!0}}]);