"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[8995],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(n),m=o,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(k,c(c({ref:t},u),{},{components:n})):r.createElement(k,c({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,c[1]=l;for(var i=2;i<a;i++)c[i]=n[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={},c="Slack",l={unversionedId:"user-guide/webhooks/slack",id:"user-guide/webhooks/slack",title:"Slack",description:"Slack use Incoming Webhooks whose constructs",source:"@site/docs/user-guide/webhooks/slack.md",sourceDirName:"user-guide/webhooks",slug:"/user-guide/webhooks/slack",permalink:"/docs/next/user-guide/webhooks/slack",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/docs/user-guide/webhooks/slack.md",tags:[],version:"current",frontMatter:{},sidebar:"userGuide",previous:{title:"Webhooks",permalink:"/docs/next/user-guide/webhooks"},next:{title:"Discord",permalink:"/docs/next/user-guide/webhooks/discord"}},s={},i=[{value:"Text format",id:"text-format",level:2},{value:"Block rich text format",id:"block-rich-text-format",level:2}],u={toc:i},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"slack"},"Slack"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://api.slack.com/messaging/webhooks"},"Slack")," use Incoming Webhooks whose constructs\ntypically support both text and block rich text, and can be configured as follows:"),(0,o.kt)("h2",{id:"text-format"},"Text format"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'{\n  "text": "#{@title}\\nPlatform: #{@device_type}\\nUpload at: #{@uploaded_at}"\n}\n')),(0,o.kt)("h2",{id:"block-rich-text-format"},"Block rich text format"),(0,o.kt)("p",null,"A simple block with markdown support"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'{\n  "blocks": [\n    {\n      "type": "section",\n      "text": {\n        "type": "mrkdwn",\n        "text": "## #{@title}\\nPlatform: #{@device_type}\\nUpload at: #{@uploaded_at}\\nInstal QRcode:\\n![qrcode](#{@qrcode_url})"\n      }\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Better look at some of the structures shown in the block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'{\n  "blocks": [\n    {\n      "type": "section",\n      "text": {\n        "type": "mrkdwn",\n        "text": @title,\n      }\n    },\n    {\n      "type": "section",\n      "fields": [\n        {\n          "type": "mrkdwn",\n          "text": "*Platform:*\\n#{@device_type}"\n        },\n        {\n          "type": "mrkdwn",\n          "text": "*Upload at:*\\n#{@uploaded_at}"\n        }\n      ]\n    },\n    "accessory": {\n      "type": "image",\n      "image_url": @qrcode_url,\n      "alt_text": "install qrcode"\n    }\n  ]\n}\n')))}d.isMDXComponent=!0}}]);