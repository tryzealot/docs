"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[6926],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={},i="Lark (Feishu)",s={unversionedId:"user-guide/webhooks/feishu",id:"user-guide/webhooks/feishu",title:"Lark (Feishu)",description:"\u98de\u4e66 use Incoming Webhooks whose constructs",source:"@site/docs/user-guide/webhooks/feishu.md",sourceDirName:"user-guide/webhooks",slug:"/user-guide/webhooks/feishu",permalink:"/docs/next/user-guide/webhooks/feishu",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/docs/user-guide/webhooks/feishu.md",tags:[],version:"current",frontMatter:{},sidebar:"userGuide",previous:{title:"Discord",permalink:"/docs/next/user-guide/webhooks/discord"},next:{title:"Dingtalk (Dingding)",permalink:"/docs/next/user-guide/webhooks/dingtalk"}},c={},u=[{value:"Text format",id:"text-format",level:2},{value:"Interactive card format",id:"interactive-card-format",level:2}],l={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lark-feishu"},"Lark (Feishu)"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN"},"\u98de\u4e66")," use Incoming Webhooks whose constructs\ntypically support both text and interactive card, and can be configured as follows:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Due to system limitations try to use keyword or IP address whitelist mechanism to receive messages.")),(0,o.kt)("h2",{id:"text-format"},"Text format"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'{\n  "msg_type": "text",\n  "text": {\n    "content": "#{@title}\\n\\n\u5b89\u88c5\u5730\u5740\uff1a#{@install_url}\\nUplaod at: #{@uploaded_at}"\n  }\n}\n')),(0,o.kt)("h2",{id:"interactive-card-format"},"Interactive card format"),(0,o.kt)("p",null,"Use card format could use partly of markdown syntax:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},'{\n  "msg_type": "interactive",\n  "card": {\n    "config": {\n      "wide_screen_mode": true,\n      "enable_forward": true\n    },\n    "elements": [\n      {\n        "tag": "div",\n        "fields": [\n          {\n            "is_short": true,\n            "text": {\n              "tag": "lark_md",\n              "content": "**Platform**\\n#{@device_type}"\n            }\n          },\n          {\n            "is_short": true,\n            "text": {\n              "tag": "lark_md",\n              "content": "**Version**\\n#{@release_version} (#{@build_version})"\n            }\n          },\n          {\n            "is_short": true,\n            "text": {\n              "tag": "lark_md",\n              "content": "**Developer**\\n#{@username}"\n            }\n          },\n          {\n            "is_short": true,\n            "text": {\n              "tag": "lark_md",\n              "content": "**Upload date**\\n#{@uploaded_at}"\n            }\n          },\n        ]\n      },\n      {\n        "tag": "div",\n        "text": {\n          "content": "**Changelog**\\n#{@changelog}",\n          "tag": "lark_md"\n        }\n      },\n      {\n        "actions": [\n          {\n            "tag": "button",\n            "text": {\n              "content": "\ud83d\udc1e Go to app",\n              "tag": "lark_md"\n            },\n            "url": "#{@release_url}",\n            "type": "primary",\n            "value": {}\n          }\n        ],\n        "tag": "action"\n      }\n    ],\n    "header": {\n      "title": {\n        "content": "#{@title}",\n        "tag": "plain_text"\n      }\n    }\n  }\n}\n')))}p.isMDXComponent=!0}}]);