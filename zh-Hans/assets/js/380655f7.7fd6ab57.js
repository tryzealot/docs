"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[9213],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(y,l(l({ref:t},s),{},{components:n})):o.createElement(y,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7504:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_label:"iOS"},l="Zealot iOS SDK",i={unversionedId:"developer-guide/sdk/ios",id:"developer-guide/sdk/ios",title:"Zealot iOS SDK",description:"iOS \u7ec4\u4ef6\u63d0\u4f9b\u4e3a Zealot \u68c0\u67e5\u65b0\u7248\u672c\u548c\u5b89\u88c5\u7684\u670d\u52a1\uff0c\u652f\u6301 Swift \u548c Objective-C\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/developer-guide/sdk/ios.md",sourceDirName:"developer-guide/sdk",slug:"/developer-guide/sdk/ios",permalink:"/zh-Hans/docs/developer-guide/sdk/ios",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/docs/developer-guide/sdk/ios.md",tags:[],version:"current",frontMatter:{sidebar_label:"iOS"},sidebar:"developerGuide",previous:{title:"SDKs",permalink:"/zh-Hans/docs/category/sdks"},next:{title:"Android",permalink:"/zh-Hans/docs/developer-guide/sdk/android"}},c={},p=[{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"Cocoapods",id:"cocoapods",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"zealot-ios-sdk"},"Zealot iOS SDK"),(0,r.kt)("p",null,"iOS \u7ec4\u4ef6\u63d0\u4f9b\u4e3a Zealot \u68c0\u67e5\u65b0\u7248\u672c\u548c\u5b89\u88c5\u7684\u670d\u52a1\uff0c\u652f\u6301 Swift \u548c Objective-C\u3002"),(0,r.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,r.kt)("h3",{id:"cocoapods"},"Cocoapods"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://cocoapods.org"},"Cocoapods")," \u5b89\u88c5 Zealot \u9700\u8981\u628a\u5b83\u52a0\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"pod 'Zealot', :git => 'https://github.com/tryzealot/zealot-ios.git', :branch => 'master'\n")),(0,r.kt)("p",null,"\u4fdd\u5b58\u540e\u5f00\u59cb\u5b89\u88c5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pod install\n")),(0,r.kt)("h2",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5728 AppDelegate \u6587\u4ef6\u5f15\u5165 Zealot \u6846\u67b6\u5934\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"// Swift\nimport Zealot\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Objective-C\n#import <Zealot/Zealot-Swift.h>\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u63a5\u7740\u5728\u4e0a\u9762\u6587\u4ef6\u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"application:didFinishLaunchingWithOptions:")," \u65b9\u6cd5\u8ffd\u52a0\u542f\u52a8\u4ee3\u7801\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// Swift\n// \u5355\u4e2a\u6e20\u9053\nlet zealot = Zealot(endpoint: "http://zealot.com", channelKey: "...")\nzealot.checkVersion()\n\n// \u591a\u4e2a\u6e20\u9053\uff0c\u6bd4\u5982\u6d4b\u8bd5\u7248\u672c\uff0c\u5185\u6d4b\u7248\u672c\nlet zealot = Zealot(endpoint: "http://zealot.com",\n                 channelKeys: [\n                   "beta": "xxxxxxx",\n                   "test": "yyyyyyy"],\n          default_enviroment: "beta")\n\n// \u6700\u540e\u89e6\u53d1\u76d1\u6d4b\u65b9\u6cd5\nzealot.checkVersion()\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'// Objective-C\n// \u5355\u4e2a\u6e20\u9053\nZealot *zealot = [[Zealot alloc] initWithEndpoint:@"http://zealot.com"\n                                       channelKey:@"..."];\n\n// \u591a\u4e2a\u6e20\u9053\uff0c\u6bd4\u5982\u6d4b\u8bd5\u7248\u672c\uff0c\u5185\u6d4b\u7248\u672c\nZealot *zealot = [[Zealot alloc] initWithEndpoint:@"http://zealot.com"\n                                      channelKeys:@{\n                                              @"beta": @"xxxxxxx",\n                                              @"gray": @"yyyyyyy"\n                                          }\n                               default_enviroment:@"beta"];\n\n// \u6700\u540e\u89e6\u53d1\u76d1\u6d4b\u65b9\u6cd5\n[zealot checkVersion];\n')))}d.isMDXComponent=!0}}]);