"use strict";(self.webpackChunkzealot_new_docs=self.webpackChunkzealot_new_docs||[]).push([[4069],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>_});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(t),f=o,_=u["".concat(s,".").concat(f)]||u[f]||c[f]||a;return t?r.createElement(_,i(i({ref:n},p),{},{components:t})):r.createElement(_,i({ref:n},p))}));function _(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9842:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_label:"zealot_debug_file"},i="Fastlane action: zealot_debug_file",l={unversionedId:"developer-guide/fastlane/zealot_debug_file",id:"version-5.0.0/developer-guide/fastlane/zealot_debug_file",title:"Fastlane action: zealot_debug_file",description:"\u4e0a\u4f20 iOS \u7684 dSYM \u6216 Android \u7684 Proguard \u8c03\u8bd5\u6587\u4ef6\u5230 Zealot",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-5.0.0/developer-guide/fastlane/zealot_debug_file.md",sourceDirName:"developer-guide/fastlane",slug:"/developer-guide/fastlane/zealot_debug_file",permalink:"/zh-Hans/docs/developer-guide/fastlane/zealot_debug_file",draft:!1,editUrl:"https://github.com/tryzealot/docs/tree/main/versioned_docs/version-5.0.0/developer-guide/fastlane/zealot_debug_file.md",tags:[],version:"5.0.0",frontMatter:{sidebar_label:"zealot_debug_file"},sidebar:"developerGuide",previous:{title:"zealot_version_check",permalink:"/zh-Hans/docs/developer-guide/fastlane/zealot_version_check"},next:{title:"zealot_sync_devices",permalink:"/zh-Hans/docs/developer-guide/fastlane/zealot_sync_devices"}},s={},d=[{value:"\u53c2\u6570",id:"\u53c2\u6570",level:2}],p={toc:d},u="wrapper";function c(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fastlane-action-zealot_debug_file"},"Fastlane action: zealot_debug_file"),(0,o.kt)("p",null,"\u4e0a\u4f20 iOS \u7684 dSYM \u6216 Android \u7684 Proguard \u8c03\u8bd5\u6587\u4ef6\u5230 Zealot"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ruby"},"  # \u4e0a\u4f20 iOS dSYM \u8c03\u8bd5\u6587\u4ef6\n  zealot_debug_file(\n    endpoint: 'https://tryzealot.ews.im',\n    token: '...',\n    channel_key: '...',\n    platform: :ios,\n    xcode_scheme: 'AppName',\n    verify_ssl: false\n  )\n\n  # \u4e0a\u4f20 Android Proguard \u8c03\u8bd5\u6587\u4ef6\n  zealot_debug_file(\n    endpoint: 'https://tryzealot.ews.im',\n    token: '...',\n    channel_key: '...',\n    platform: :android,\n    android_build_type: 'release',\n    android_flavor: 'store',\n    release_version: '1.1.0',\n    build_version: '1',\n    overwrite: true\n  )\n\n  # \u4e0a\u4f20\u6307\u5b9a zip file \u8c03\u8bd5\u6587\u4ef6\n  zealot_debug_file(\n    endpoint: 'https://tryzealot.ews.im',\n    token: '...',\n    channel_key: '...',\n    zip_file: 'path/to/your/zip_file',\n    release_version: '1.1.0',\n    build_version: '1',\n    verify_ssl: false\n  )\n")),(0,o.kt)("h2",{id:"\u53c2\u6570"},"\u53c2\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"+--------------------+-----------------------------------+---------------------------+---------+\n|                                  zealot_debug_file Options                                   |\n+--------------------+-----------------------------------+---------------------------+---------+\n| Key                | Description                       | Env Var                   | Default |\n+--------------------+-----------------------------------+---------------------------+---------+\n| endpoint           | The endpoint of zealot            | ZEALOT_ENDPOINT           |         |\n| token              | The token of user                 | ZEALOT_TOKEN              |         |\n| channel_key        | Any channel key of app            | ZEALOT_CHANNEL_KEY        |         |\n| zip_file           | Using given the path of zip file  | DF_DSYM_ZIP_FILE          |         |\n|                    | to direct upload                  |                           |         |\n| platform           | The name of platfrom, avaiable    | ZEALOT_PLATFORM           |         |\n|                    | value are                         |                           |         |\n|                    | ios,mac,macos,osx,android         |                           |         |\n| path               | The path of debug file            | ZEALOT_PATH               |         |\n|                    | (iOS/macOS is archive path for    |                           |         |\n|                    | Xcode, Android is path for app    |                           |         |\n|                    | project)                          |                           |         |\n| xcode_scheme       | The scheme name of app            | ZEALOT_XCODE_SCHEME       |         |\n| android_build_type | The build type of app             | ZEALOT_ANDROID_BUILD_TYPE | release |\n| android_flavor     | The product flavor of app         | ZEALOT_ANDROID_FLAVOR     |         |\n| extra_files        | A set file names                  | ZEALOT_EXTRA_FILES        | []      |\n| output_path        | The output path of compressed     | DF_DSYM_OUTPUT_PATH       | .       |\n|                    | dSYM file                         |                           |         |\n| release_version    | The release version of app        | ZEALOT_RELEASE_VERSION    |         |\n|                    | (Android needs)                   |                           |         |\n| build_version      | The build version of app          | ZEALOT_BUILD_VERSION      |         |\n|                    | (Android needs)                   |                           |         |\n| overwrite          | Overwrite output compressed file  | DF_DSYM_OVERWRITE         | false   |\n|                    | if it existed                     |                           |         |\n| timeout            | Request timeout in seconds        | ZEALOT_TIMEOUT            |         |\n| verify_ssl         | Should verify SSL of zealot       | ZEALOT_VERIFY_SSL         | true    |\n|                    | service                           |                           |         |\n| fail_on_error      | Should an error uploading app     | ZEALOT_FAIL_ON_ERROR      | false   |\n|                    | cause a failure? (true/false)     |                           |         |\n+--------------------+-----------------------------------+---------------------------+---------+\n* = default value is dependent on the user's system\n\n+-----------------------+-----------------------------------------+\n|               zealot_debug_file Output Variables                |\n+-----------------------+-----------------------------------------+\n| Key                   | Description                             |\n+-----------------------+-----------------------------------------+\n| ZEAALOT_ERROR_MESSAGE | The error message during upload process |\n+-----------------------+-----------------------------------------+\n")))}c.isMDXComponent=!0}}]);